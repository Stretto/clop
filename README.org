* CLOP - a DSL for OpenCL OPtimizations

  [[https://travis-ci.org/dmakarov/clop][https://travis-ci.org/dmakarov/clop.png]] [[https://coveralls.io/r/dmakarov/clop][https://coveralls.io/repos/dmakarov/clop/badge.svg]]


  CLOP is a DSL to write OpenCL kernels in a higher level of abstraction and
  apply optimizations to them.  For more information see [[http://dmakarov.github.io/clop/][CLOP by dmakarov]].

  To compile an example

  - install [[http://dlang.org/download.html][DMD]] or [[https://github.com/ldc-developers/ldc][LDC]], and [[https://github.com/D-Programming-Language/dub][DUB]].
  - invoke dub for a specific sample application, e.g.

#+BEGIN_SRC sh
  $ dub run --build=release --compiler=dmd :nw -- 32 10
#+END_SRC

  The command will build the CLOP runtime library, and the NW application.  If
  the build is successful, the command runs the NW application with the
  arguments =32 10=, which means that the length of sequences to align is 32
  characters and the penalty value is 10.

  All example applications can be built with verbose build type, e.g.

#+BEGIN_SRC sh
  $ dub run --build=verbose :nw -- 32 10
#+END_SRC

  With verbose build an application dumps the generated host- and device-side
  code.

  The example applications are
  - [[file:examples/algebra/README.org][algebra]] :: simple linear algebra operations on vectors and matrices;
  - [[file:examples/bp/README.org][bp]] :: back propagation step of a neural network;
  - [[file:examples/lu/README.org][lu]] :: LU decomposition implementation;
  - [[file:examples/nw/README.org][nw]] :: Needleman-Wunsch algorithm implementation;
  - [[file:examples/pf/README.org][pf]] :: Path finder algorithm implementation;
  - [[file:examples/stencil/README.org][stencil]] :: simple stencil computations.
