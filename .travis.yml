sudo: required
dist: trusty
language: d

d:
  - dmd
#  - ldc

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq opencl-headers
  - bash .travis/amd_sdk.sh;
  - tar -xjf AMD-SDK.tar.bz2;
  - AMDAPPSDKROOT=${HOME}/AMDAPPSDK;
  - export OPENCL_VENDOR_PATH=${AMDAPPSDKROOT}/etc/OpenCL/vendors;
  - mkdir -p ${OPENCL_VENDOR_PATH};
  - sh AMD-APP-SDK*.sh --tar -xf -C ${AMDAPPSDKROOT};
  - echo libamdocl64.so > ${OPENCL_VENDOR_PATH}/amdocl64.icd;
  - export LD_LIBRARY_PATH=${AMDAPPSDKROOT}/lib/x86_64:${LD_LIBRARY_PATH};
  - chmod +x ${AMDAPPSDKROOT}/bin/x86_64/clinfo;
  - ${AMDAPPSDKROOT}/bin/x86_64/clinfo;
  - sh << EOF
#!/bin/sh

# Original script from https://github.com/gregvw/amd_sdk/

# Location from which get nonce and file name from
URL="http://developer.amd.com/tools-and-sdks/opencl-zone/opencl-tools-sdks/amd-accelerated-parallel-processing-app-sdk/"
URLDOWN="http://developer.amd.com/amd-license-agreement-appsdk/"

NONCE1_STRING='name="amd_developer_central_downloads_page_nonce"'
FILE_STRING='name="f"'
POSTID_STRING='name="post_id"'
NONCE2_STRING='name="amd_developer_central_nonce"'

#For newest FORM=`wget -qO - $URL | sed -n '/download-2/,/64-bit/p'`
FORM=`wget -qO - $URL | sed -n '/download-5/,/64-bit/p'`

# Get nonce from form
NONCE1=`echo $FORM | awk -F ${NONCE1_STRING} '{print $2}'`
NONCE1=`echo $NONCE1 | awk -F'"' '{print $2}'`
echo $NONCE1

# get the postid
POSTID=`echo $FORM | awk -F ${POSTID_STRING} '{print $2}'`
POSTID=`echo $POSTID | awk -F'"' '{print $2}'`
echo $POSTID

# get file name
FILE=`echo $FORM | awk -F ${FILE_STRING} '{print $2}'`
FILE=`echo $FILE | awk -F'"' '{print $2}'`
echo $FILE

FORM=`wget -qO - $URLDOWN --post-data "amd_developer_central_downloads_page_nonce=${NONCE1}&f=${FILE}&post_id=${POSTID}"`

NONCE2=`echo $FORM | awk -F ${NONCE2_STRING} '{print $2}'`
NONCE2=`echo $NONCE2 | awk -F'"' '{print $2}'`
echo $NONCE2

wget --content-disposition --trust-server-names $URLDOWN --post-data "amd_developer_central_nonce=${NONCE2}&f=${FILE}" -O AMD-SDK.tar.bz2;
EOF


install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq fglrx=2:8.960-0ubuntu1 opencl-headers

script:
# examples
  - dub run --build=coverage --compiler=${DC} :algebra -- 32
  - dub run --build=coverage --compiler=${DC} :bp -- 32
# current compilers both dmd and ldc run over the 3G memory limit
#  - dub run --build=coverage --compiler=${DC} :nw -- 32 10
  - dub run --build=coverage --compiler=${DC} :wrapper_example
# unit tests run after examples to collect more coverage
  - dub test --build=testing --compiler=${DC} :compiler
  - dub test --build=testing --compiler=${DC} :runtime

after_success:
  - dub build --build=release --compiler=${DC} :coverall
  - tools/bin/clop_coverall

# Local Variables:
# compile-command: "dub --build=verbose :nw -- 32 10"
# End:
